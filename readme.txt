The exoGravity package
======================

Installation
------------

### Requirements
-   Tested on Linux/Fedora 38
-   Python Python 3.x, ideally with x\>=5 (required for ruamel.yaml)
-   Astropy (\>=2.0.2)
-   ruamel.yaml \>=0.16.5 (recommended) or alternatively pyyaml \>=3.11
-   NumPy (\>=1.16.5), Scipy (\>=0.19.0)
-   cleanGravity (see installation procedure below)

### Installation procedure

Download or clone cleanGravity: https://gitlab.obspm.fr/mnowak/cleanGravity
Add the directory to your python path, so that you can then import the package
in any of your python code: "import cleanGravity as cg"

Download or clone exoGravity, https://gitlab.obspm.fr/mnowak/exoGravity and make
all the following scripts executable (`chmod +x`): 
create_config.py, create_phase_reference.py, astrometry_reduce.py, spectrum_reduce.py, swap_reduce.py, run_gravi_astroreduce.py, normalize_spectrum.py, plot_spectrum.py, plot_astrometry.py, combine_spectra.py

Also add the directory to your path, so that you can execute these scripts from anywhere.

### Usage

The scripts were originally designed as independant pieces which should be sequentially. The benefit of this approach is to be able to re-run only one part of the reduction. All scripts share a common configuration YML file, with all the parameters of the reduction. The parameters can be changed directly in the YML file or, for conveninence, can also be changed via some command-line options in certain script. 

The configuration file should not generated by hand from scratch, but instead via the create_config.py script. 

The usual sequence to reduce a dataset depends on the observing strategy. 

For a dual-field on-axis star/planet sequence:
- create_config.py
- create_phase_reference.py
- astrometry_reduced.py 
- spectrum_reduce.py 

For a dual-field off-axis with a swap sequence (astrometry only):
- create_config.py
- swap_reduce.py 

For a dual-field off-axis with a swap calibrator:
- create_config.py
- swap_reduce.py 
- create_phase_reference.py
- astrometry_reduced.py 
- spectrum_reduce.py 

For a quick astrometric measurement, it is also possible to use the run_gravi_astrometry.py script in the directory containing the astroreduced fits file. This script will try to guess which observing strategy was used and will be perform the correct sequence with some default parameters. 

All options are documented in the help command of the scripts (see e.g. create_config.py -h)

### Tutorial data

The data directory inside the tutorial (exoGravity/tutorial/data) must be populated with some reduced GRAVITY data.
These can be downloaded using this link (about 1.5GB):
https://share.obspm.fr/s/AinfW9JAPRzDYbF

### Suggested order for the notebooks

If you just want to run the exoGravity reduction, simply look at exogravity.ipynb.

Otherwise, if you also want to understand a bit how it works, and manipulate data:
1- data_manipulation.ipynb
2- swap_example.ipynb
3- onaxis_example.ipynb
4- exogravity.ipynb
